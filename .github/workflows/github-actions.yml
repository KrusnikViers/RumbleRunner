name: Test, build and publish

on:
  push:
  schedule:
    - cron: '0 9 * * 1,4'

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    strategy:
      matrix:
        python-version: [ 3.8 ]

    steps:
      - uses: actions/checkout@v2
      - name: Setup
        uses: ./.github/actions/setup
        with:
          python-version: ${{ matrix.python-version }}
      - name: Lint
        run: flake8 . --config=.github/.flake8 --exit-zero

  test:
    runs-on: ubuntu-latest
    name: Test
    strategy:
      matrix:
        python-version: [ 3.8, 3.9 ]

    steps:
      - uses: actions/checkout@v2
      - name: Setup
        uses: ./.github/actions/setup
        with:
          python-version: ${{ matrix.python-version }}
      - name: Test
        run: |
          coverage run --source=app,base -m unittest
          coverage xml -i
      - name: Upload coverage
        uses: codecov/codecov-action@v2

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    name: Build and Publish

    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rumblerunner:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/rumblerunner:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/rumblerunner:buildcache,mode=max

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}